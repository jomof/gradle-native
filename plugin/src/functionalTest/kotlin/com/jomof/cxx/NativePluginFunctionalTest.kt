/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.jomof.cxx

import kotlin.test.Test
import org.gradle.testkit.runner.GradleRunner
import org.junit.Rule
import org.junit.rules.TemporaryFolder

class NativePluginFunctionalTest {
    @get:Rule val tempFolder = TemporaryFolder()

    private fun getProjectDir() = tempFolder.root
    private fun getBuildFile() = getProjectDir().resolve("build.gradle")
    private fun getSettingsFile() = getProjectDir().resolve("settings.gradle")

    private val clang = "/Users/jomof/Library/Android/sdk/ndk/23.1.7779620/toolchains/llvm/prebuilt/darwin-x86_64/bin/clang++"
    private val gccToolchain = "/Users/jomof/Library/Android/sdk/ndk/23.1.7779620/toolchains/llvm/prebuilt/darwin-x86_64"
    private val sysroot = "/Users/jomof/Library/Android/sdk/ndk/23.1.7779620/toolchains/llvm/prebuilt/darwin-x86_64/sysroot"

    @Test fun `can run task`() {
        // Setup the test build
        val qqq = "\"\"\""
        getSettingsFile().writeText("")
        getBuildFile().writeText("""
        plugins {
            id('com.github.jomof.cxx.core')
        }
        cxx {
            var compile = rule {
                description = "Building CXX object ${'$'}out"
                command = $qqq
                    $clang
                        --target=i686-none-linux-android24 
                        --gcc-toolchain=$gccToolchain 
                        --sysroot=$sysroot 
                        ${'$'}DEFINES 
                        ${'$'}INCLUDES 
                        ${'$'}FLAGS 
                        -MD 
                        -MT 
                        ${'$'}out 
                        -MF 
                        ${'$'}DEP_FILE 
                        -o 
                        ${'$'}out 
                        -c 
                        ${'$'}in
                $qqq
            }
            var link = rule {
                description = "Linking CXX shared library ${'$'}TARGET_FILE"
                command = 
                    $qqq
                    $clang 
                      --target=i686-none-linux-android24 
                      --gcc-toolchain=$gccToolchain
                      --sysroot=$sysroot
                      -fPIC 
                      ${'$'}LANGUAGE_COMPILE_FLAGS 
                      ${'$'}ARCH_FLAGS 
                      ${'$'}LINK_FLAGS 
                      -shared 
                      ${'$'}SONAME_FLAG${'$'}SONAME 
                      -o 
                      ${'$'}TARGET_FILE 
                      ${'$'}in 
                      ${'$'}LINK_PATH 
                      ${'$'}LINK_LIBRARIES
                    $qqq
             }
            compile {
                in = "/Users/jomof/projects/abseil-cpp/MyApplication4/app/src/main/cpp/native-lib.cpp"
                out = "myapplication.dir/native-lib.cpp.o"
                DEFINES = "-Dmyapplication_EXPORTS"
                DEP_FILE = "myapplication.dir/native-lib.cpp.o.d"
                FLAGS = $qqq
                    -g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong 
                    -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security
                    -fno-limit-debug-info -fPIC
                    $qqq
              OBJECT_DIR = "myapplication.dir"
              OBJECT_FILE_DIR = "myapplication.dir"
            }
            link {
                in = [ "myapplication.dir/native-lib.cpp.o",
                      "$sysroot/usr/lib/i686-linux-android/24/liblog.so"]
                out = "obj/x86/libmyapplication.so"
                
                LANGUAGE_COMPILE_FLAGS = $qqq
                    -g -DANDROID -fdata-sections -ffunction-sections -funwind-tables -fstack-protector-strong 
                    -no-canonical-prefixes -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security
                    -fno-limit-debug-info$qqq
                LINK_FLAGS = $qqq
                    -static-libstdc++ -Wl,--build-id=sha1 -Wl,--no-rosegment -Wl,--fatal-warnings 
                    -Wl,--no-undefined -Qunused-arguments$qqq
                LINK_LIBRARIES = "-llog  -latomic -lm"
                OBJECT_DIR = "myapplication.dir"
                POST_BUILD = ":"
                PRE_LINK = ":"
                SONAME = "libmyapplication.so"
                SONAME_FLAG = "-Wl,-soname,"
                TARGET_FILE = "obj/x86/libmyapplication.so"
                TARGET_PDB = "myapplication.so.dbg"
            }
        }
        """.trimIndent())

        // Run the build
        val runner = GradleRunner.create()
        runner.forwardOutput()
        runner.withPluginClasspath()
       // runner.withArguments("myapplication.dir-native-lib.cpp.o", "obj-x86-libmyapplication.so")
        runner.withArguments("obj-x86-libmyapplication.so")
        runner.withProjectDir(getProjectDir())
        val result = runner.build()
        println("")
    }
}
